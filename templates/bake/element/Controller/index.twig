{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
    /**
     * Index method
     *
     * @return \Cake\Http\Response|null|void Renders view
     */
    public function index()
    {

        $query = $this->{{ currentModelName }}->find();
        
        // Uncomment to enable Search Plugin 
        // $this->loadComponent('CakeLte.Search');
        // $finder_options = $this->Search->prep('{{ currentModelName }}');
        // $query->find("search", $finder_options);
        

{% set belongsTo = Bake.aliasExtractor(modelObj, 'BelongsTo') %}
{% if belongsTo %}
        $query->contain({{ Bake.exportArray(belongsTo)|raw }});
{% endif %}

        try {
            ${{ pluralName }} = $this->paginate($query);  
        } catch (\Cake\Http\Exception\NotFoundException $e) {
            $params = $this->request->getParam('?');
            if (isset($params['page']) && $params['page'] != '1') {
                return $this->redirect(['action' => 'index']);
            }
        }

        $this->set(compact('{{ pluralName }}'));
    }

    